@using CommunityToolkit.Maui.Storage;
@using EuroConnector.ClientApp.Data.Interfaces;

@inject ISetupService SetupService;
@inject ISnackbar Snackbar;
@inject ILogger Logger;

@attribute [Authorize(Roles = "User, Admin, ErpAdmin")]

<div>
    <MudText Typo="Typo.h5">Inbox Settings</MudText>

    <MudForm @ref="form" @bind-IsValid="success">
        <div class="browse">
            <EconTextField T="string" @bind-Value="@inboxPath" Label="Inbox Folder" Class="path-field"/>
            <EconButton OnClick="BrowseClicked" Class="browse-button">Browse</EconButton>
        </div>
    </MudForm>

    <div class="button-group">
        <EconButton OnClick="OnSaveClicked">Save</EconButton>
        <EconButton OnClick="OnClearClicked">Clear</EconButton>
    </div>
</div>

@code {
    [CascadingParameter]
    public EuroConnector.ClientApp.Shared.Error Error { get; set; }

    MudForm form;
    bool success;
    string inboxPath;

    protected override void OnInitialized()
    {
        inboxPath = Preferences.Get("inboxPath", "C:\\EuroConnector\\Inbox");
    }

    private async Task BrowseClicked()
    {
        var folderPickerResult = await FolderPicker.PickAsync(inboxPath, CancellationToken.None);

        if (folderPickerResult.IsSuccessful) inboxPath = folderPickerResult.Folder.Path;
    }

    private void OnSaveClicked()
    {
        Logger.Information("Inbox save clicked.");

        try
        {
            SetupService.ApplyInboxSettings(inboxPath);
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }

        Snackbar.Add("Inbox settings applied successfully.", Severity.Success);
        Logger.Information("Inbox settings applied successfully.");
    }

    private void OnClearClicked()
    {
        Logger.Information("Inbox clear clicked.");
        SetupService.ClearSettings(new[] { "inboxPath" });
        inboxPath = string.Empty;

        Snackbar.Add("Settings cleared successfully.", Severity.Success);
        Logger.Information("Inbox settings cleared successfully.");
    }
}
