@using Blazored.LocalStorage;
@using EuroConnector.ClientApp.Data.Interfaces;

@inject ISetupService SetupService;
@inject ILocalStorageService LocalStorage;
@inject ISnackbar Snackbar;

<div>
    <MudText Typo="Typo.h5">Inbox Settings</MudText>

    <MudForm @ref="form" @bind-IsValid="success">
        <EconTextField T="string" @bind-Value="@inboxPath" Label="Inbox Folder" />
    </MudForm>

    <div class="button-group">
        <EconButton Variant="Variant.Outlined" Color="Color.Inherit" OnClick="OnSaveClicked">Save</EconButton>
        <EconButton Variant="Variant.Outlined" Color="Color.Inherit" OnClick="OnClearClicked">Clear</EconButton>
    </div>
</div>

@code {
    MudForm form;
    bool success;
    string inboxPath;

    protected override async Task OnInitializedAsync()
    {
        inboxPath = await LocalStorage.GetItemAsync<string>("inboxPath");
    }

    private async Task OnSaveClicked()
    {
        await LocalStorage.SetItemAsync("inboxPath", inboxPath);
        Snackbar.Add("Inbox settings applied successfully.", Severity.Success);
    }

    private async Task OnClearClicked()
    {
        await SetupService.ClearSettings(new List<string> { "inboxPath" });
        Snackbar.Add("Settings cleared successfully.", Severity.Success);
    }
}
